// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	modelsv2 "github.com/fnproject/fn_go/modelsv2"
)

// PutAppsAppIDReader is a Reader for the PutAppsAppID structure.
type PutAppsAppIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAppsAppIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutAppsAppIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutAppsAppIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutAppsAppIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutAppsAppIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutAppsAppIDOK creates a PutAppsAppIDOK with default headers values
func NewPutAppsAppIDOK() *PutAppsAppIDOK {
	return &PutAppsAppIDOK{}
}

/*PutAppsAppIDOK handles this case with default header values.

App details and stats.
*/
type PutAppsAppIDOK struct {
	Payload *modelsv2.App
}

func (o *PutAppsAppIDOK) Error() string {
	return fmt.Sprintf("[PUT /apps/{appID}][%d] putAppsAppIdOK  %+v", 200, o.Payload)
}

func (o *PutAppsAppIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.App)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAppsAppIDBadRequest creates a PutAppsAppIDBadRequest with default headers values
func NewPutAppsAppIDBadRequest() *PutAppsAppIDBadRequest {
	return &PutAppsAppIDBadRequest{}
}

/*PutAppsAppIDBadRequest handles this case with default header values.

Parameters are missing or invalid.
*/
type PutAppsAppIDBadRequest struct {
	Payload *modelsv2.Error
}

func (o *PutAppsAppIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /apps/{appID}][%d] putAppsAppIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutAppsAppIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAppsAppIDNotFound creates a PutAppsAppIDNotFound with default headers values
func NewPutAppsAppIDNotFound() *PutAppsAppIDNotFound {
	return &PutAppsAppIDNotFound{}
}

/*PutAppsAppIDNotFound handles this case with default header values.

App does not exist.
*/
type PutAppsAppIDNotFound struct {
	Payload *modelsv2.Error
}

func (o *PutAppsAppIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /apps/{appID}][%d] putAppsAppIdNotFound  %+v", 404, o.Payload)
}

func (o *PutAppsAppIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAppsAppIDDefault creates a PutAppsAppIDDefault with default headers values
func NewPutAppsAppIDDefault(code int) *PutAppsAppIDDefault {
	return &PutAppsAppIDDefault{
		_statusCode: code,
	}
}

/*PutAppsAppIDDefault handles this case with default header values.

Unexpected error
*/
type PutAppsAppIDDefault struct {
	_statusCode int

	Payload *modelsv2.Error
}

// Code gets the status code for the put apps app ID default response
func (o *PutAppsAppIDDefault) Code() int {
	return o._statusCode
}

func (o *PutAppsAppIDDefault) Error() string {
	return fmt.Sprintf("[PUT /apps/{appID}][%d] PutAppsAppID default  %+v", o._statusCode, o.Payload)
}

func (o *PutAppsAppIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
