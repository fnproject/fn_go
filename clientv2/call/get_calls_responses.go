// Code generated by go-swagger; DO NOT EDIT.

package call

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	modelsv2 "github.com/fnproject/fn_go/modelsv2"
)

// GetCallsReader is a Reader for the GetCalls structure.
type GetCallsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCallsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCallsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetCallsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCallsOK creates a GetCallsOK with default headers values
func NewGetCallsOK() *GetCallsOK {
	return &GetCallsOK{}
}

/*GetCallsOK handles this case with default header values.

List of Calls
*/
type GetCallsOK struct {
	Payload *modelsv2.CallList
}

func (o *GetCallsOK) Error() string {
	return fmt.Sprintf("[GET /calls][%d] getCallsOK  %+v", 200, o.Payload)
}

func (o *GetCallsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.CallList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCallsNotFound creates a GetCallsNotFound with default headers values
func NewGetCallsNotFound() *GetCallsNotFound {
	return &GetCallsNotFound{}
}

/*GetCallsNotFound handles this case with default header values.

Calls not found
*/
type GetCallsNotFound struct {
	Payload *modelsv2.Error
}

func (o *GetCallsNotFound) Error() string {
	return fmt.Sprintf("[GET /calls][%d] getCallsNotFound  %+v", 404, o.Payload)
}

func (o *GetCallsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
