// Code generated by go-swagger; DO NOT EDIT.

package triggers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	modelsv2 "github.com/fnproject/fn_go/modelsv2"
)

// CreateTriggerReader is a Reader for the CreateTrigger structure.
type CreateTriggerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTriggerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateTriggerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewCreateTriggerDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateTriggerOK creates a CreateTriggerOK with default headers values
func NewCreateTriggerOK() *CreateTriggerOK {
	return &CreateTriggerOK{}
}

/*CreateTriggerOK handles this case with default header values.

Created Triggers data
*/
type CreateTriggerOK struct {
	Payload *modelsv2.Trigger
}

func (o *CreateTriggerOK) Error() string {
	return fmt.Sprintf("[POST /triggers][%d] createTriggerOK  %+v", 200, o.Payload)
}

func (o *CreateTriggerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.Trigger)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTriggerDefault creates a CreateTriggerDefault with default headers values
func NewCreateTriggerDefault(code int) *CreateTriggerDefault {
	return &CreateTriggerDefault{
		_statusCode: code,
	}
}

/*CreateTriggerDefault handles this case with default header values.

Error
*/
type CreateTriggerDefault struct {
	_statusCode int

	Payload *modelsv2.Error
}

// Code gets the status code for the create trigger default response
func (o *CreateTriggerDefault) Code() int {
	return o._statusCode
}

func (o *CreateTriggerDefault) Error() string {
	return fmt.Sprintf("[POST /triggers][%d] CreateTrigger default  %+v", o._statusCode, o.Payload)
}

func (o *CreateTriggerDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(modelsv2.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
